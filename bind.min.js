"use strict";
function getElementsByText(e, t) {
	var n = [];
	function r(e, t) {
		if (e.nodeType === Node.TEXT_NODE) return e.nodeValue.toLowerCase().includes(t);
		if (e.nodeType === Node.ELEMENT_NODE) for (var n = 0; n < e.childNodes.length; n++) if (r(e.childNodes[n], t)) return !0;
		return !1;
	}
	for (var a = 0; a < t.length; a++) r(t[a], e.toLowerCase()) && n.push(t[a]);
	return n;
}
function getVarLength(e) {
	return Object.keys(e).length;
}
function getVarData(e, t) {
	const n = Object.keys(e)[t];
	return { name: n, value: "function" == typeof e[n] ? e[n]() : e[n] };
}
function htmlValue(e) {
	return "${" + e + "}";
}
let initialDOM, currentDOM;
export default function render(e, t) {
	const n = document.querySelector(t);
	(initialDOM = Array.from(n.cloneNode(!0).getElementsByTagName("*"))), (currentDOM = Array.from(n.getElementsByTagName("*"))), updateDOM(e, t);
	let r = {};
	setInterval(() => {
		for (let n = 0; n < getVarLength(e); n++) {
			const a = getVarData(e, n);
			r[n] && r[n].value !== a.value && updateDOM(e, t), (r[n] = { value: a.value });
		}
	}, 0);
}
function updateDOM(e, t) {
	let n = document.querySelector(t);
	initialDOM.forEach((t, n) => {
		for (let r = 0; r < getVarLength(e); r++) {
			const a = getVarData(e, r);
			t.innerHTML.includes(htmlValue(a.name)) && 0 === t.children.length && (currentDOM[n].innerHTML = t.innerHTML.replace(htmlValue(a.name), a.value));
		}
	}),
		(n = currentDOM);
}
